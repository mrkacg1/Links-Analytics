version: 0.2
env: 
    USER_DOCKER: "aldigitalcol"
    PASS_DOCKER: "dckr_pat_9dkaNTLxApRd0FkfagHAptgGRYM"
phases:
  install:
    commands:
      - 
         export DEBIAN_FRONTEND=noninteractive
         #Install php7.1
         apt-get update
         apt-get install -y  software-properties-common
         LC_ALL=C.UTF-8 add-apt-repository -y ppa:ondrej/php
         apt-get update
         # Install PHP
         apt-get install -y php7.3\
                  php7.3-ldap \
                  php7.3-xml \
                  php7.3-xmlrpc \
                  php7.3-zip \
                  php7.3-mysql \
                  php7.3-mbstring \
                  php7.3-mcrypt \
                  php7.3-gd \
                  php7.3-readline \
                  php7.3-opcache \
                  php7.3-xdebug \
                  php7.3-dom \
                  php-xdebug \
                  php7.3-curl \
                  unzip
         #Enable xdebug - phpunit uses this for code coverage
         phpenmod xdebug
         #Install composer
         php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
         php composer-setup.php ;
         php -r "unlink('composer-setup.php');" ;
         mv composer.phar /usr/local/bin/composer
         #Various handy node based dev tools - do you need these during your build? Comment if not.
         #npm install -g gulp
         #npm install -g grunt
         #npm install -g webpack
     # Start Mysql if you need it
     # - apt-get install -y mysql-server
     # - su mysql -s /bin/bash -c "/usr/sbin/mysqld" &
  pre_build:
    commands:    
      - docker login --username "$USER_DOCKER" --password-stdin
      - REPOSITORY_URI=aldigitalcol/mastertools-link-analytics:latest
  build:
    commands:
      - docker build -t $REPOSITORY_URI:main -f Dockerfile .
      - docker tag latest
  post_build:
    commands:
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:latest
      - printf '[{"name":"links-analytics-new-app-container","imageUri":"%s"}]' $REPOSITORY_URI:latest > imagedefinitions.json
  artifacts:
    files: imagedefinitions.json